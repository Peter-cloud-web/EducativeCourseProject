// Generated by view binder compiler. Do not edit!
package com.example.educativecourseproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.educativecourseproject.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReviewsItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CircleImageView authorAvatar;

  @NonNull
  public final TextView authorName;

  @NonNull
  public final TextView authorUserName;

  @NonNull
  public final ConstraintLayout cardView;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final TextView review;

  private ReviewsItemBinding(@NonNull CardView rootView, @NonNull CircleImageView authorAvatar,
      @NonNull TextView authorName, @NonNull TextView authorUserName,
      @NonNull ConstraintLayout cardView, @NonNull CardView cardView2, @NonNull TextView review) {
    this.rootView = rootView;
    this.authorAvatar = authorAvatar;
    this.authorName = authorName;
    this.authorUserName = authorUserName;
    this.cardView = cardView;
    this.cardView2 = cardView2;
    this.review = review;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ReviewsItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReviewsItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reviews_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReviewsItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.authorAvatar;
      CircleImageView authorAvatar = ViewBindings.findChildViewById(rootView, id);
      if (authorAvatar == null) {
        break missingId;
      }

      id = R.id.authorName;
      TextView authorName = ViewBindings.findChildViewById(rootView, id);
      if (authorName == null) {
        break missingId;
      }

      id = R.id.authorUserName;
      TextView authorUserName = ViewBindings.findChildViewById(rootView, id);
      if (authorUserName == null) {
        break missingId;
      }

      id = R.id.cardView;
      ConstraintLayout cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      CardView cardView2 = (CardView) rootView;

      id = R.id.review;
      TextView review = ViewBindings.findChildViewById(rootView, id);
      if (review == null) {
        break missingId;
      }

      return new ReviewsItemBinding((CardView) rootView, authorAvatar, authorName, authorUserName,
          cardView, cardView2, review);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
