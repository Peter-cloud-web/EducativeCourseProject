// Generated by Dagger (https://dagger.dev).
package com.example.cinemaxv3.viewmodels.popularMoviesViewModel;

import com.example.domain.repository.RemoteMoviesRepository;
import com.example.domain.use_cases.popularMovies_usecase.PopularMoviesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class PopularMoviesViewModel_Factory implements Factory<PopularMoviesViewModel> {
  private final Provider<PopularMoviesUseCase> getPopularMoviesUseCaseProvider;

  private final Provider<RemoteMoviesRepository> repositoryProvider;

  public PopularMoviesViewModel_Factory(
      Provider<PopularMoviesUseCase> getPopularMoviesUseCaseProvider,
      Provider<RemoteMoviesRepository> repositoryProvider) {
    this.getPopularMoviesUseCaseProvider = getPopularMoviesUseCaseProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public PopularMoviesViewModel get() {
    return newInstance(getPopularMoviesUseCaseProvider.get(), repositoryProvider.get());
  }

  public static PopularMoviesViewModel_Factory create(
      Provider<PopularMoviesUseCase> getPopularMoviesUseCaseProvider,
      Provider<RemoteMoviesRepository> repositoryProvider) {
    return new PopularMoviesViewModel_Factory(getPopularMoviesUseCaseProvider, repositoryProvider);
  }

  public static PopularMoviesViewModel newInstance(PopularMoviesUseCase getPopularMoviesUseCase,
      RemoteMoviesRepository repository) {
    return new PopularMoviesViewModel(getPopularMoviesUseCase, repository);
  }
}
