// Generated by Dagger (https://dagger.dev).
package com.example.domain.use_cases.upcomingMovies_usecase;

import com.example.domain.pager.UpComingPagingMovies;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class UpComingMoviesUseCase_Factory implements Factory<UpComingMoviesUseCase> {
  private final Provider<UpComingPagingMovies> upComingPagingMoviesProvider;

  public UpComingMoviesUseCase_Factory(
      Provider<UpComingPagingMovies> upComingPagingMoviesProvider) {
    this.upComingPagingMoviesProvider = upComingPagingMoviesProvider;
  }

  @Override
  public UpComingMoviesUseCase get() {
    return newInstance(upComingPagingMoviesProvider.get());
  }

  public static UpComingMoviesUseCase_Factory create(
      Provider<UpComingPagingMovies> upComingPagingMoviesProvider) {
    return new UpComingMoviesUseCase_Factory(upComingPagingMoviesProvider);
  }

  public static UpComingMoviesUseCase newInstance(UpComingPagingMovies upComingPagingMovies) {
    return new UpComingMoviesUseCase(upComingPagingMovies);
  }
}
