// Generated by Dagger (https://dagger.dev).
package com.example.cinemaxv3.viewmodels.similarMoviesViewModel;

import com.example.domain.use_cases.similarmovies_usecase.SimilarMovieUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SimilarMoviesViewModel_Factory implements Factory<SimilarMoviesViewModel> {
  private final Provider<SimilarMovieUseCase> similarMovieUseCaseProvider;

  public SimilarMoviesViewModel_Factory(Provider<SimilarMovieUseCase> similarMovieUseCaseProvider) {
    this.similarMovieUseCaseProvider = similarMovieUseCaseProvider;
  }

  @Override
  public SimilarMoviesViewModel get() {
    return newInstance(similarMovieUseCaseProvider.get());
  }

  public static SimilarMoviesViewModel_Factory create(
      Provider<SimilarMovieUseCase> similarMovieUseCaseProvider) {
    return new SimilarMoviesViewModel_Factory(similarMovieUseCaseProvider);
  }

  public static SimilarMoviesViewModel newInstance(SimilarMovieUseCase similarMovieUseCase) {
    return new SimilarMoviesViewModel(similarMovieUseCase);
  }
}
