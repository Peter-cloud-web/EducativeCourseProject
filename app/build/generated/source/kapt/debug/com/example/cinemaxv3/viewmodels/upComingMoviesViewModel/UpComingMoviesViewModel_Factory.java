// Generated by Dagger (https://dagger.dev).
package com.example.cinemaxv3.viewmodels.upComingMoviesViewModel;

import com.example.domain.use_cases.upcomingMovies_usecase.UpComingMoviesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class UpComingMoviesViewModel_Factory implements Factory<UpComingMoviesViewModel> {
  private final Provider<UpComingMoviesUseCase> getUpComingMoviesUseCaseProvider;

  public UpComingMoviesViewModel_Factory(
      Provider<UpComingMoviesUseCase> getUpComingMoviesUseCaseProvider) {
    this.getUpComingMoviesUseCaseProvider = getUpComingMoviesUseCaseProvider;
  }

  @Override
  public UpComingMoviesViewModel get() {
    return newInstance(getUpComingMoviesUseCaseProvider.get());
  }

  public static UpComingMoviesViewModel_Factory create(
      Provider<UpComingMoviesUseCase> getUpComingMoviesUseCaseProvider) {
    return new UpComingMoviesViewModel_Factory(getUpComingMoviesUseCaseProvider);
  }

  public static UpComingMoviesViewModel newInstance(
      UpComingMoviesUseCase getUpComingMoviesUseCase) {
    return new UpComingMoviesViewModel(getUpComingMoviesUseCase);
  }
}
