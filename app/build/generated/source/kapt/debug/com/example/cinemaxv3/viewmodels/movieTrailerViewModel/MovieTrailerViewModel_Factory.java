// Generated by Dagger (https://dagger.dev).
package com.example.cinemaxv3.viewmodels.movieTrailerViewModel;

import com.example.domain.use_cases.movietrailer_usecase.MovieTrailerUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MovieTrailerViewModel_Factory implements Factory<MovieTrailerViewModel> {
  private final Provider<MovieTrailerUseCase> trailerUseCaseProvider;

  public MovieTrailerViewModel_Factory(Provider<MovieTrailerUseCase> trailerUseCaseProvider) {
    this.trailerUseCaseProvider = trailerUseCaseProvider;
  }

  @Override
  public MovieTrailerViewModel get() {
    return newInstance(trailerUseCaseProvider.get());
  }

  public static MovieTrailerViewModel_Factory create(
      Provider<MovieTrailerUseCase> trailerUseCaseProvider) {
    return new MovieTrailerViewModel_Factory(trailerUseCaseProvider);
  }

  public static MovieTrailerViewModel newInstance(MovieTrailerUseCase trailerUseCase) {
    return new MovieTrailerViewModel(trailerUseCase);
  }
}
