// Generated by Dagger (https://dagger.dev).
package com.example.paging.pager;

import com.example.domain.repository.RemoteMoviesRepository;
import com.example.educativecourseproject.data.db.MovieDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class PopularMoviesImpl_Factory implements Factory<PopularMoviesImpl> {
  private final Provider<MovieDatabase> movieDatabaseProvider;

  private final Provider<RemoteMoviesRepository> repositoryProvider;

  public PopularMoviesImpl_Factory(Provider<MovieDatabase> movieDatabaseProvider,
      Provider<RemoteMoviesRepository> repositoryProvider) {
    this.movieDatabaseProvider = movieDatabaseProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public PopularMoviesImpl get() {
    return newInstance(movieDatabaseProvider.get(), repositoryProvider.get());
  }

  public static PopularMoviesImpl_Factory create(Provider<MovieDatabase> movieDatabaseProvider,
      Provider<RemoteMoviesRepository> repositoryProvider) {
    return new PopularMoviesImpl_Factory(movieDatabaseProvider, repositoryProvider);
  }

  public static PopularMoviesImpl newInstance(MovieDatabase movieDatabase,
      RemoteMoviesRepository repository) {
    return new PopularMoviesImpl(movieDatabase, repository);
  }
}
