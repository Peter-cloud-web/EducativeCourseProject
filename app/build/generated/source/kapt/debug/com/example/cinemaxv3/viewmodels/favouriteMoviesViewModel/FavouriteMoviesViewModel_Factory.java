// Generated by Dagger (https://dagger.dev).
package com.example.cinemaxv3.viewmodels.favouriteMoviesViewModel;

import com.example.domain.repository.CachedMoviesRepository;
import com.example.domain.use_cases.favouritemovies_usecase.GetFavouriteMovieUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FavouriteMoviesViewModel_Factory implements Factory<FavouriteMoviesViewModel> {
  private final Provider<GetFavouriteMovieUseCase> favouriteMovieUseCaseProvider;

  private final Provider<CachedMoviesRepository> repositoryProvider;

  public FavouriteMoviesViewModel_Factory(
      Provider<GetFavouriteMovieUseCase> favouriteMovieUseCaseProvider,
      Provider<CachedMoviesRepository> repositoryProvider) {
    this.favouriteMovieUseCaseProvider = favouriteMovieUseCaseProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public FavouriteMoviesViewModel get() {
    return newInstance(favouriteMovieUseCaseProvider.get(), repositoryProvider.get());
  }

  public static FavouriteMoviesViewModel_Factory create(
      Provider<GetFavouriteMovieUseCase> favouriteMovieUseCaseProvider,
      Provider<CachedMoviesRepository> repositoryProvider) {
    return new FavouriteMoviesViewModel_Factory(favouriteMovieUseCaseProvider, repositoryProvider);
  }

  public static FavouriteMoviesViewModel newInstance(GetFavouriteMovieUseCase favouriteMovieUseCase,
      CachedMoviesRepository repository) {
    return new FavouriteMoviesViewModel(favouriteMovieUseCase, repository);
  }
}
