// Generated by Dagger (https://dagger.dev).
package com.example.di;

import android.content.Context;
import com.example.educativecourseproject.data.db.MovieDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RoomModule_ProvideDatabaseFactory implements Factory<MovieDatabase> {
  private final Provider<Context> androidContextProvider;

  public RoomModule_ProvideDatabaseFactory(Provider<Context> androidContextProvider) {
    this.androidContextProvider = androidContextProvider;
  }

  @Override
  public MovieDatabase get() {
    return provideDatabase(androidContextProvider.get());
  }

  public static RoomModule_ProvideDatabaseFactory create(Provider<Context> androidContextProvider) {
    return new RoomModule_ProvideDatabaseFactory(androidContextProvider);
  }

  public static MovieDatabase provideDatabase(Context androidContext) {
    return Preconditions.checkNotNullFromProvides(RoomModule.INSTANCE.provideDatabase(androidContext));
  }
}
