// Generated by Dagger (https://dagger.dev).
package com.example.cinemaxv3.viewmodels.movieCastViewModel;

import com.example.domain.use_cases.moviecasts_usecase.MovieCastsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MovieCastsViewModel_Factory implements Factory<MovieCastsViewModel> {
  private final Provider<MovieCastsUseCase> getMovieCastsUseCaseProvider;

  public MovieCastsViewModel_Factory(Provider<MovieCastsUseCase> getMovieCastsUseCaseProvider) {
    this.getMovieCastsUseCaseProvider = getMovieCastsUseCaseProvider;
  }

  @Override
  public MovieCastsViewModel get() {
    return newInstance(getMovieCastsUseCaseProvider.get());
  }

  public static MovieCastsViewModel_Factory create(
      Provider<MovieCastsUseCase> getMovieCastsUseCaseProvider) {
    return new MovieCastsViewModel_Factory(getMovieCastsUseCaseProvider);
  }

  public static MovieCastsViewModel newInstance(MovieCastsUseCase getMovieCastsUseCase) {
    return new MovieCastsViewModel(getMovieCastsUseCase);
  }
}
