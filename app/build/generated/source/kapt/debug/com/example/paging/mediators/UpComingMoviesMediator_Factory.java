// Generated by Dagger (https://dagger.dev).
package com.example.paging.mediators;

import com.example.domain.repository.RemoteMoviesRepository;
import com.example.educativecourseproject.data.db.MovieDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class UpComingMoviesMediator_Factory implements Factory<UpComingMoviesMediator> {
  private final Provider<MovieDatabase> dbProvider;

  private final Provider<RemoteMoviesRepository> repositoryProvider;

  public UpComingMoviesMediator_Factory(Provider<MovieDatabase> dbProvider,
      Provider<RemoteMoviesRepository> repositoryProvider) {
    this.dbProvider = dbProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public UpComingMoviesMediator get() {
    return newInstance(dbProvider.get(), repositoryProvider.get());
  }

  public static UpComingMoviesMediator_Factory create(Provider<MovieDatabase> dbProvider,
      Provider<RemoteMoviesRepository> repositoryProvider) {
    return new UpComingMoviesMediator_Factory(dbProvider, repositoryProvider);
  }

  public static UpComingMoviesMediator newInstance(MovieDatabase db,
      RemoteMoviesRepository repository) {
    return new UpComingMoviesMediator(db, repository);
  }
}
